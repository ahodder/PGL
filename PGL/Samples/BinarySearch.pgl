

fn main() int {
  // Create data on the stack
  buffer := stack [1, 4, 6, 8, 10, 12, 15]
  
  // Create data on the heap
  buffer2 := heap [1, 3, 23, 59, 120, 14253]
  
  // Find the target in buffer1
  result := bin_search(4, ^buffer, 0, buffer.length)
  assert(result)
  
  // Find the target in buffer2
  result2 := bin_search(120, ^buffer2, 0, buffer2.length)
  assert(result2)
  
  return 0
}

fn bin_search(target: int, buffer: ^[]int, start_index: int, end_index: int)  found: bool {
  if start_index > end_index
    return false
    
  i := (start_index + end_index) / 2
  
  if buffer[i] == target
    return true
  elif buffer[i] < target
    return bin_search(target, buffer, start_index, i - 1)
  else
    return bin_search(target, buffer, i + 1, end_index)
}